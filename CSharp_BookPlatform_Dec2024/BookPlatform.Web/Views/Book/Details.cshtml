@using BookPlatform.Data.Models
@using BookPlatform.Data.Repository.Interfaces
@using BookPlatform.Web.ViewModels.Book
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using static BookPlatform.Common.OutputMessages.ReadingList;
@model BookDetailsViewModel

@{
    ViewData["Title"] = "Details";

    // set reading list button text
    string readingListButtonText = "Add to Reading List";
    if (TempData["ReadingStatus"] != null) 
    {
        readingListButtonText = TempData["ReadingStatus"] as string;
    }

    // set alerts for adding a book to reading list
    if (TempData[nameof(SuccessfullyAddedToReadingList)] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData[nameof(SuccessfullyAddedToReadingList)] <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    if (TempData[nameof(FailedToAddBookToReadingList)] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData[nameof(FailedToAddBookToReadingList)] <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}



<div class="container">
    <div class="row">
        <div class="col-md-3 col-sm-6 col-xs-12">
            <div class="card mb-2 shadow-sm" style="width: 100%">
                <img src="@Model.ImageUrl" class="card-img-top" alt="Cover Image" style="height: 450px; object-fit: cover;">                
            </div>   
            <div class="col-md-12">
                <div class="buttons" style="width: 100%">
                    <div class="d-flex flex-column">
                        @if (this.User?.Identity?.IsAuthenticated ?? false)
                        {              
                            <div class="dropdown d-flex flex-column">
                                <button type="button" class="btn btn-dark dropdown-toggle mb-2" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @readingListButtonText
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 100%">
                                    <a class="dropdown-item text-center" asp-controller="ReadingList" asp-action="AddToReadingList" asp-route-readingStatusId="1" asp-route-bookId="@Model.Id">Read</a>
                                    <a class="dropdown-item text-center" asp-controller="ReadingList" asp-action="AddToReadingList" asp-route-readingStatusId="2" asp-route-bookId="@Model.Id">Currently reading</a>
                                    <a class="dropdown-item text-center" asp-controller="ReadingList" asp-action="AddToReadingList" asp-route-readingStatusId="3" asp-route-bookId="@Model.Id">Want to read</a>
                                </div>
                            </div>
                        }        
                        <button type="button" class="btn btn-outline-dark mb-2">Reviews</button>
                        <button type="button" class="btn btn-info mb-2">Quotes</button>
                    </div>
                </div>
            </div>
        </div>
        

        <div class="col-md-9 col-sm-6 col-xs-12 min-vw-50">
            <h3>@Model.Title</h3>
            <p>@Model.Author</p>
            <div class="d-flex flex-row align-content-center">
                <svg class="mx-0" width="19" height="19" xmlns="http://www.w3.org/2000/svg">
                    <polygon points="10,1 4,18 19,6 1,6 16,18" fill="gold" />
                </svg>
                <p class="mx-2 my-0 py-0">@Model.AverageRating.ToString("F2")</p>
            </div>
            <div class="card mt-1 shadow-sm">
                <div class="card-body">                                       
                    <p class="card-text">@Model.Description</p>                    
                    <div class="card-footer d-flex align-items-center">
                        @if (@Model.PublicationYear < 0)
                        {
                            <p class="mb-0">First published in @Math.Abs(@Model.PublicationYear) BC</p>
                        }
                        else
                        {
                            <p class="mb-0">First published in @Model.PublicationYear</p>
                        }                  
                    </div>
                </div>                
            </div>            
        </div>
    </div>
</div>



